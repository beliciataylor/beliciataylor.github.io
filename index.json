[{"authors":["admin"],"categories":null,"content":"I am a rising senior at Emory College of Arts \u0026amp; Sciences majoring in Economics and Mathematics with an English minor. I am seeking a research assistant position to further prepare myself for a PhD in Economics with an interest in studying public economics. I\u0026rsquo;m currently a research assistant working on a project using machine learning, postgreSQL, and natural language processing in Python.\n","date":1600387200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1600387200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"https://beliciataylor.github.io/author/belicia-taylor-rodriguez/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/author/belicia-taylor-rodriguez/","section":"authors","summary":"I am a rising senior at Emory College of Arts \u0026amp; Sciences majoring in Economics and Mathematics with an English minor. I am seeking a research assistant position to further prepare myself for a PhD in Economics with an interest in studying public economics.","tags":null,"title":"Belicia Taylor Rodriguez","type":"authors"},{"authors":["Belicia Taylor Rodriguez"],"categories":["Talk-Write-Ups"],"content":"Background: As a senior undergraduate student at Emory, I had the pleasure of being invited to talk to an Emory undergraduate research course on how to begin using GitHub, and the following post summarizes the key points of that talk. I will be reviewing version control systems, the connection between Git and GitHub, and introducing the purpose behind common git commands (i.e push, pull, commit). Additionally, I will highlight portions of my detailed handout which goes step-by-step into how to create a repository, how to update a local and remote repository using Git commands, etc. For a detailed write-up of my talk, please see my handout, which contains my notes for the presentation and demonstration and was distributed to the students of the class.\n Before we begin discussing the purpose and function of Git and GitHub, let\u0026rsquo;s start with understanding what version control systems are. A version control system allows you to make changes to a file or a set of files over time.\nHow is this different from how we normally save versions of documents? Imagine you are writing a paper for a course. You write the first paragraph, save, exit out of the document, return to the document the next day, rewrite the first paragraph, add a second paragraph, and save. Now, you\u0026rsquo;re rereading your first paragraph and realize you liked the first paragraph you wrote yesterday better. As much as you may want that first draft back, that version of your document is no longer available.\nHere is where version control solves your problem. With version control, you have access multiple versions of a document, meaning you\u0026rsquo;ll have a record of all the changes that has been done to a document. Your file\u0026rsquo;s versions are stored in a version database. If you don\u0026rsquo;t like a current version of a document and want to revert back to an older version, you can. That first paragraph from yesterday is now easily accessible.\nWhat does version control have to do with Git? Git is a type of version control called distributed version control system. Pretend that we have a computer A, or your local computer, where all of your file\u0026rsquo;s versions are stored in a version database, or a repository. What happens if you spill coffee all over your keyboard and lose all your files? You\u0026rsquo;d lose all your documents and their versions! Git can also store a copy of your local repositories in a server computer, or GitHub. That way, after you get a new computer, you can retrieve all of your versions and documents from the server computer.\nHaving your repositories in a server has an added benefit\u0026ndash;you can now access your repositories from any other computer i.e a work or remote computer. You can also update your server repository from a remote computer; that way, once your finished working on your repository at work, you can send it back to the server, and when you get home, you can upload your changes and continue working with your most up-to-date repository.\nWe mentioned GitHub as our \u0026ldquo;server computer\u0026rdquo; in our example, but in more general terms, GitHub is a centralized location for hosting git repositories (think: Git HUB). As far as I know, git repositories can store and update almost any file type including Python and R scripts, Jupyter notebooks, RMarkdown files, and PDFs. We\u0026rsquo;ve previously said we can store a copy of our local repository on GitHub.com, but how do we technically do that? There are four Git commands that complete this process:\n git add: tells git you want to add a version of a file to your local repository git commit: saves the versions of the files you previously \u0026ldquo;git\u0026rdquo; added to your local repository git push: sends the updated local repository to your server repository git pull: if changes were made to your server repository, git pull updates your local repository with those changes  The following diagram shows the way the commands are used between local, server, and remote repositories:\nNow that we\u0026rsquo;ve established our understanding of git and GitHub, how do we get started? To complete the process we\u0026rsquo;ve been outlining, we will complete the following steps:\n Download Git onto your local computer. Create a GitHub account. Create a repository on GitHub. Create a copy of your repository on your local computer. Add a file to your local repository. Push your file to GitHub. Make changes to a file on GitHub. Pull changes to your local computer.  To accomplish these steps, I would like to refer you to my handout, which contains screenshots of my browser and terminal that show each step in the process. Section 2 of the handout goes over how to install git for Windows, Linux, and Mac computers. Section 3 reviews how to set up a GitHub account. Section 4 talks about creating a repository. Finally, section 5 shows how to use the git commands to update your repository.\nHere\u0026rsquo;s a preview of section 4 and 5 of the handout:\nAnd that\u0026rsquo;s it! After reviewing the handout and going through the demonstration, the power of git and GitHub are at your fingertips. Happy committing!\n","date":1600387200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1600387200,"objectID":"42c689bf06079fcc5747d4f4bea95176","permalink":"https://beliciataylor.github.io/post/intro-to-github-talk/","publishdate":"2020-09-18T00:00:00Z","relpermalink":"/post/intro-to-github-talk/","section":"post","summary":"A summary of my class talk notes introducing Git and GitHub to an undergraduate research course","tags":["Git","GitHub"],"title":"Introduction to Git and GitHub","type":"post"},{"authors":["Belicia Taylor Rodriguez"],"categories":["Research"],"content":"During the summer of 2020, I researched whether co-authorship networks in the top five economics journals modeled small-worldness.\nWhat is a co-authorship network? A co-authorship network shows the connections between authors who have published a paper together. Take the following sample co-authorship network as our example.\nAuthor A and Author B have written a paper together, Author A and Author C have written a paper together, but Author B and Author C have not written a paper together. This co-authorship network has three authors and two papers, but, in reality, co-authorship networks consist of thousands of authors and thousands of papers.\nThe question we sought to answer was, \u0026ldquo;What can co-authorship networks tell us about the community of authors publishing in T5 general interest economics journals?\u0026rdquo; Our research group created a dataset with all the papers and authors from these journals, and we first looked into the characteristics of our network. We saw two important observations:\n The author\u0026rsquo;s connections had a high probability of being connected to each other.  Let\u0026rsquo;s return to our sample network; since B and C are connected to A, then there\u0026rsquo;s a good chance that they will end up writing a paper together. Maybe A introduces B and C to each other, or A, B, and C write a paper together.\nIn network analysis, this is a characteristic of having a high clustering coefficient, defined as the fraction of the author\u0026rsquo;s connections that are connected to each other. In our example, the clustering coefficient is 0 since author A\u0026rsquo;s connections are not connected to each other. If B and C were connected, then the clustering coefficient would be 1.\nThe number of steps to travel from one author to another in a network was small.  In our example, the steps to \u0026ldquo;travel\u0026rdquo; from author A to author B is 1, the steps from A to C is 1, and the steps to B to C is 2.\nIn network analysis, the average shortest path would define the average number of steps in the shortest path for all possible pair of nodes. In our example, the average shortest path is 1.33 since (2+1+1)/3 = 4/3 = 1.33.\nHaving a high clustering coefficient and a small average shortest path are both characteristics of small world network models, which are models where the author\u0026rsquo;s connections are generally connected to each other.\nOur research team decided to confirm these results using Humphries and Gurney\u0026rsquo;s small-worldness statistic, which uses the clustering coefficient and average shortest path as part of the calculation.\nFirst, we created co-authorship networks for each year. For example, for 2004 we would take all the published papers in 2004 and papers previously published, create the network using Python\u0026rsquo;s NetworkX, and calculate the statistic. We did this to see if there were any trends or changes in whether our networks were small world or not from year to year.\nOur study found that, according to the statistic, our networks were all small-world networks. As a visual aid, we created visualizations of our per year co-authorship networks using Gephi.\nThe red nodes, or circles, signify all the authors who are part of the largest connected group. The blue nodes are not in the largest connection. Overtime, more authors are added to the largest group until majority are in the largest connected group.\nTherefore, this study shows that authors publishing in these top five general-interest economic jouranls tend to be interconnected with each other and form small communities. This study is a precursor into our study of creating co-authorship networks using natural language processing.\n","date":1597104000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1597104000,"objectID":"488f78040ecd9a0414472aa9ba7cfc25","permalink":"https://beliciataylor.github.io/post/sure-symposium-presentation/","publishdate":"2020-08-11T00:00:00Z","relpermalink":"/post/sure-symposium-presentation/","section":"post","summary":"A write-up of my Emory Summer Undergraduate Research Experience virtual symposium poster presentation","tags":["Research"],"title":"Co-authorship networks in academic publishing in economics","type":"post"},{"authors":null,"categories":null,"content":"","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"df56a6b1f7348f054a0cf7ed0e6b53cd","permalink":"https://beliciataylor.github.io/project/repository-portfolio/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/project/repository-portfolio/","section":"project","summary":"Portfolio of my projects","tags":["Repository"],"title":"Portfolio","type":"project"},{"authors":null,"categories":null,"content":"","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"2dfecddcd8073d794bc9e6d74d4ba242","permalink":"https://beliciataylor.github.io/project/repository-self-study/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/project/repository-self-study/","section":"project","summary":"Code and materials used to self-teach programming languages","tags":["Repository"],"title":"Self-Study","type":"project"},{"authors":null,"categories":null,"content":"","date":1555891200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1555891200,"objectID":"93e307993f0ef98390f4a7913a6b08b0","permalink":"https://beliciataylor.github.io/project/medium-blogdown/","publishdate":"2019-04-22T00:00:00Z","relpermalink":"/project/medium-blogdown/","section":"project","summary":"Tips for Developing Website Using blogdown","tags":["Medium"],"title":"","type":"project"},{"authors":null,"categories":null,"content":"","date":1539993600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1539993600,"objectID":"1e83bb9505058a7876641e9e76beb0f6","permalink":"https://beliciataylor.github.io/project/college-newspaper/","publishdate":"2018-10-20T00:00:00Z","relpermalink":"/project/college-newspaper/","section":"project","summary":"Emory Wheel College Newspaper Articles","tags":["Newspaper"],"title":"","type":"project"}]